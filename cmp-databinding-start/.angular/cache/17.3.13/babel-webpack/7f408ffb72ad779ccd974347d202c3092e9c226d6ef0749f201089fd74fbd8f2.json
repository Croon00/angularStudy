{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, EventEmitter, Output } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\nlet CockpitComponent = class CockpitComponent {\n  constructor() {\n    this.serverCreated = new EventEmitter();\n    this.blueprintCreated = new EventEmitter();\n    this.newServerName = \"\";\n    this.newServerContent = \"\";\n  }\n  ngOnInit() {}\n  onAddServer() {\n    this.serverCreated.emit({\n      serverName: this.newServerName,\n      serverContent: this.newServerContent\n    });\n  }\n  onAddBlueprint() {\n    this.blueprintCreated.emit({\n      serverName: this.newServerName,\n      serverContent: this.newServerContent\n    });\n  }\n};\n__decorate([Output(), __metadata(\"design:type\", Object)], CockpitComponent.prototype, \"serverCreated\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], CockpitComponent.prototype, \"blueprintCreated\", void 0);\nCockpitComponent = __decorate([Component({\n  selector: \"app-cockpit\",\n  standalone: true,\n  imports: [FormsModule, EventEmitter],\n  templateUrl: \"./cockpit.component.html\",\n  styleUrl: \"./cockpit.component.css\"\n}), __metadata(\"design:paramtypes\", [])], CockpitComponent);\nexport { CockpitComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}