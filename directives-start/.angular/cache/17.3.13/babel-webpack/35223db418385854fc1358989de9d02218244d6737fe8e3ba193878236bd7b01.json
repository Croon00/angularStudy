{"ast":null,"code":"import { Renderer2, ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let BetterHighlightDirective = /*#__PURE__*/(() => {\n  class BetterHighlightDirective {\n    constructor(elRef, renderer) {\n      this.elRef = elRef;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      // this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'blue', )\n    }\n    mouseover(eventData) {\n      this.renderer.setStyle(this.elRef.nativeElement, \"background-color\", \"transparent\");\n    }\n    mouseleave(eventData) {\n      this.renderer.setStyle(this.elRef.nativeElement, \"background-color\", \"blue\");\n    }\n    static {\n      this.ɵfac = function BetterHighlightDirective_Factory(t) {\n        return new (t || BetterHighlightDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: BetterHighlightDirective,\n        selectors: [[\"\", \"appBetterHighlight\", \"\"]],\n        hostBindings: function BetterHighlightDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouse\", function BetterHighlightDirective_mouse_HostBindingHandler() {\n              return ctx.mouseleave();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return BetterHighlightDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}